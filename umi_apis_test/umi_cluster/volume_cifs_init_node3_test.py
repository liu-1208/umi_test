# NOTE: Generated By HttpRunner v3.1.6
# FROM: umi_cluster/volume_cifs_init_node3.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseVolumeCifsInitNode3(HttpRunner):

    config = Config("${ENV(umi_cluster_test_title)}").base_url(
        "${ENV(umi_cluster_url)}"
    )

    teststeps = [
        Step(
            RunRequest("Cifs Service Status")
            .post("/cluster/cifs/service/status")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs Service Init")
            .post("/cluster/cifs/service/init")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs Service Disable")
            .post("/cluster/cifs/service/disable")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs Service Enable")
            .post("/cluster/cifs/service/enable")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs User Update")
            .post("/cluster/cifs/user/update")
            .with_json({"req_host": "127.0.0.1", "user": "usr-01", "passwd": "123456"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs User List")
            .post("/cluster/cifs/user/list")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs Share Update")
            .post("/cluster/cifs/share/update")
            .with_json(
                {
                    "req_host": "127.0.0.1",
                    "name": "share-01",
                    "vol_name": "umi_test",
                    "share_dir": "/subdir-01",
                    "glfs_api": True,
                    "acls": True,
                    "allow_hosts": ["172.18.123.0/24", "172.169.100.11"],
                    "deny_hosts": ["192.168.2.0/24"],
                    "guest_ok": True,
                    "admin_users": ["admin-01"],
                    "read_list": ["ro-user-01"],
                    "write_list": ["rw-user-01"],
                    "create_mode": "420",
                    "directory_mode": "493",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Cifs User List")
            .post("/cluster/cifs/share/list")
            .with_json({"req_host": "127.0.0.1"})
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseVolumeCifsInitNode3().test_start()
