# NOTE: Generated By HttpRunner v3.1.6
# FROM: umi_cluster/posix/posix.yml


import pytest
from httprunner import Parameters


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCasePosix(HttpRunner):
    @pytest.mark.parametrize(
        "param", Parameters({"req_host": "${P(umi_cluster/data/posix.csv)}"})
    )
    def test_start(self, param):
        super().test_start(param)

    config = (
        Config("Cluster Posix Test")
        .variables(**{"vol_name": "vol-01"})
        .base_url("${get_cluster_url()}")
    )

    teststeps = [
        Step(
            RunRequest("Posix Share List")
            .post("/cluster/posix/share/list")
            .with_json({"req_host": "$req_host"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Posix Share Update")
            .post("/cluster/posix/share/update")
            .with_json(
                {
                    "req_host": "$req_host",
                    "vol_name": "$vol_name",
                    "share_dir": "/tmp/$vol_name/subdir-01",
                    "allow_hosts": ["172.18.123.0/24", "172.169.100.11"],
                    "deny_hosts": ["192.168.2.0/24"],
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Posix Client Status")
            .post("/cluster/posix/client/status")
            .with_json({"req_host": "$req_host", "vol_name": "$vol_name"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Posix Share Delete")
            .post("/cluster/posix/share/delete")
            .with_json(
                {
                    "req_host": "$req_host",
                    "vol_name": "$vol_name",
                    "share_dir": "/tmp/$vol_name/subdir-01",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCasePosix().test_start()
