# NOTE: Generated By HttpRunner v3.1.6
# FROM: umi_cluster/volume_knfs_node3.yml


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseVolumeKnfsNode3(HttpRunner):

    config = Config("kernel nfs").base_url("${ENV(umi_cluster_url)}")

    teststeps = [
        Step(
            RunRequest("NFS Service Status")
            .post("/cluster/nfs/service/status")
            .with_json({"req_host": "127.0.0.1", "nfs_mode": "Kernel"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("NFS Service Init")
            .post("/cluster/nfs/service/init")
            .with_json({"req_host": "127.0.0.1", "nfs_mode": "Kernel"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("NFS Service Disable")
            .post("/cluster/nfs/service/disable")
            .with_json({"req_host": "127.0.0.1", "nfs_mode": "Kernel"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("NFS Service Enable")
            .post("/cluster/nfs/service/enable")
            .with_json({"req_host": "127.0.0.1", "nfs_mode": "Kernel"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("NFS Share Update")
            .post("/cluster/nfs/share/update")
            .with_json(
                {
                    "req_host": "127.0.0.1",
                    "nfs_mode": "Kernel",
                    "vol_name": "umi_test",
                    "share_dir": "/subdir-01",
                    "client": "172.18.123.0/24",
                    "readonly": False,
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("NFS Share List")
            .post("/cluster/nfs/share/list")
            .with_json({"req_host": "127.0.0.1", "nfs_mode": "Kernel"})
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("Nfs Share Delete")
            .post("/cluster/nfs/share/delete")
            .with_json(
                {
                    "req_host": "127.0.0.1",
                    "nfs_mode": "Kernel",
                    "vol_name": "umi_test",
                    "share_dir": "/subdir-01",
                    "client": "172.18.123.0/24",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
    ]


if __name__ == "__main__":
    TestCaseVolumeKnfsNode3().test_start()
