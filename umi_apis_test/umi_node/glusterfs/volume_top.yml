config:
    name: "Node Gluster Volume Top Test"
    base_url: ${get_node_url()}
    parameters:
        host_ip_01-host_ip_02: ${P(umi_node/data/glusterfs.csv)}
        host01: ${P(umi_node/data/storage.csv)}
    variables:
        vol_name: pytest-vol-01

teststeps:
-
    name: Gluster Volume Create Single
    testcase: umi_node/glusterfs/module/volume_create_single.yml

-
    name: Gluster Volume Top Open
    request:
        method: POST
        url: "/gluster/volume/top/open"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Top Read
    request:
        method: POST
        url: "/gluster/volume/top/read"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Top Write
    request:
        method: POST
        url: "/gluster/volume/top/write"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Top Opendir
    request:
        method: POST
        url: "/gluster/volume/top/opendir"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Top Readdir
    request:
        method: POST
        url: "/gluster/volume/top/readdir"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Top Clear
    request:
        method: POST
        url: "/gluster/volume/top/clear"
        json: {
          "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Delete
    testcase: umi_node/glusterfs/module/volume_delete.yml


