
config:
    name: "request methods testcase with functions"
    # base_url: ${ENV(node_url)}
    base_url: ${get_node_url()}
    parameters:
        host_ip_01-host_ip_02: ${P(umi_node/data/glusterfs.csv)}
        host01-host02: ${P(umi_node/data/storage.csv)}
    variables:
        vol_name: pytest-vol-01

teststeps:
# -
#     name: Gluster Volume Create Multiple
#     testcase: umi_node/glusterfs/module/volume_create_replica.yml
-
    name: Gluster Volume Create Base
    testcase: umi_node/glusterfs/module/volume_create_base.yml
# 
# 下面这个接口被去掉了      
# -
#     name: Gluster Volume Reset
#     request:
#         method: POST
#         url: "/gluster/volume/reset"
#         json: {
#           "vol_name": "pytest-vol-01",
#           "force": false
#         }
#     validate:
#         - eq: ["status_code", 200]

-
    name: Gluster Volume Reset Brick Start
    request:
        method: POST
        url: "/gluster/volume/reset/brick/start"
        json: {
          "vol_name": "$vol_name",
          "source_brick": "$host01:/data/${get_uuid_with_uuid_mark(uuid_01)}/$vol_name"
        }
    validate:
        - eq: ["status_code", 200]

# old_brick 和 new_brick 在这里是相同的
-
    name: Gluster Volume Reset Brick Commit
    request:
        method: POST
        url: "/gluster/volume/reset/brick/commit"
        json: {
          "vol_name": "$vol_name",
          "source_brick": "$host01:/data/${get_uuid_with_uuid_mark(uuid_01)}/$vol_name",
          "new_brick": "$host01:/data/${get_uuid_with_uuid_mark(uuid_01)}/$vol_name"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Volume Delete
    testcase: umi_node/glusterfs/module/volume_delete.yml
    

