
config:
    name: "Node Gluster Snapshot Test"
    base_url: ${get_node_url()}
    parameters:
        host_ip_01-host_ip_02: ${P(umi_node/data/glusterfs.csv)}
        host01: ${P(umi_node/data/storage.csv)}
    variables:
        vol_name: pytest-vol-01

# snapshot中的部分接口还没有最终确定好，这里先把测试用例填上
teststeps:
-
    name: Gluster Volume Create Single
    testcase: umi_node/glusterfs/module/volume_create_single.yml
-
    name: Gluster Snapshot Create
    request:
        method: POST
        url: "/gluster/snapshot/create"
        json: {
            "snapname": "snapshot-lvm2-1",
            "vol_name": "$vol_name",
            "is_no_timestamp": true,
            "description": "XDFS快照卷信息",
            "is_force": false
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Activate
    request:
        method: POST
        url: "/gluster/snapshot/activate"
        json: {
            "snapname": "snapshot-lvm2-1",
            "is_force": false
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot deactivate
    request:
        method: POST
        url: "/gluster/snapshot/deactivate"
        json: {
            "snapname": "snapshot-lvm2-1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot restore
    request:
        method: POST
        url: "/gluster/snapshot/restore"
        json: {
            "snapname": "snapshot-lvm2-1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Delete
    request:
        method: POST
        url: "/gluster/snapshot/delete"
        json: {
            "snapname": "snapshot-lvm2-1",
            "is_all": false,
            "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot List
    request:
        method: POST
        url: "/gluster/snapshot/list"
        json: {
            "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Info
    request:
        method: POST
        url: "/gluster/snapshot/info"
        json: {
            "snapname": "snapshot-lvm2-1",
            "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Status
    request:
        method: POST
        url: "/gluster/snapshot/status"
        json: {
            "snapname": "snapshot-lvm2-1",
            "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Clone
    request:
        method: POST
        url: "/gluster/snapshot/clone"
        json: {
            "clonename": "snapshot-lvm2-1",
            "vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Insecure
    request:
        method: POST
        url: "/gluster/snapshot/insecure"
        json: {
            "vol_name": "$vol_name",
            "is_enable": false
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Uss
    request:
        method: POST
        url: "/gluster/snapshot/uss"
        json: {
            "vol_name": "$vol_name",
            "is_enable": false
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Dir
    request:
        method: POST
        url: "/gluster/snapshot/dir"
        json: {
            "vol_name": "$vol_name",
            "is_enable": false
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Volume Delete
    request:
        method: POST
        url: "/gluster/snapshot/volume/delete"
        json: {
            "snap_vol_name": "$vol_name"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Init
    request:
        method: POST
        url: "/gluster/snapshot/schedule/Init"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Date Add
    request:
        method: POST
        url: "/gluster/snapshot/schedule/date/add"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Interval Add
    request:
        method: POST
        url: "/gluster/snapshot/schedule/interval/add"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Interval Add
    request:
        method: POST
        url: "/gluster/snapshot/schedule/interval/add"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Cron Add
    request:
        method: POST
        url: "/gluster/snapshot/schedule/cron/add"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Schedule Pause
    request:
        method: POST
        url: "/gluster/snapshot/schedule/pause"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Schedule Resume
    request:
        method: POST
        url: "/gluster/snapshot/schedule/resume"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Remove
    request:
        method: POST
        url: "/gluster/snapshot/schedule/remove"
        json: {
            "job_id": "task1"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Gluster Snapshot Schedule Get
    request:
        method: POST
        url: "/gluster/snapshot/schedule/get"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Snapshot Schedule Info
    request:
        method: POST
        url: "/gluster/snapshot/schedule/info"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Gluster Volume Delete
    testcase: umi_node/glusterfs/module/volume_delete.yml


