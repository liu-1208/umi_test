
config:
    name: "request methods testcase with functions"
    # base_url: ${ENV(node_url)}
    base_url: ${get_node_url()}
    parameters:
        share_dir-client-opt1-opt2:  ${P(umi_node/data/nfs.csv)}

teststeps:
-
    name: Kernel Nfs Service Status
    request:
        method: POST
        url: "/nfs/kernel/service/status"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Kernel Nfs Service Init
    request:
        method: POST
        url: "/nfs/kernel/service/init"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Kernel Nfs Service Enable
    request:
        method: POST
        url: "/nfs/kernel/service/enable"
        json: {}
    validate:
        - eq: ["status_code", 200]

-
    name: Kernel Nfs Share List
    request:
        method: POST
        url: "/nfs/kernel/share/list"
        json: {}
    validate:
        - eq: ["status_code", 200]

-
    name: Kernel Nfs Share Update
    request:
        method: POST
        url: "/nfs/kernel/share/update"
        json: {
          "vol_name": "pytest-vol-01",
          "share_dir": "$share_dir",
          "client": "$client",
          "options": "${switch_nfs_opts($opt1,$opt2)}"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Kernel Nfs Share Delete
    request:
        method: POST
        url: "/nfs/kernel/share/delete"
        json: {
          "vol_name": "pytest-vol-01",
          "share_dir": "$share_dir",
          "client": "$client",
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Nfs Client Status
    request:
        method: POST
        url: "/nfs/client/status"
        json: {}
    validate:
        - eq: ["status_code", 200]
-
    name: Kernel Nfs Service Disable
    request:
        method: POST
        url: "/nfs/kernel/service/disable"
        json: {}
    validate:
        - eq: ["status_code", 200]
