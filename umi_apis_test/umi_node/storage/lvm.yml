
config:
    name: "Node Lvm Test"
    base_url: ${get_node_url()}
    parameters:
        block01-block02: ${P(umi_node/data/storage.csv)}

teststeps:
-
    name: Lvm Pv Create
    request:
        method: POST
        url: "/lvm/pv/create"
        json: {
            "dev_names": [
                "$block01",
                "$block02"
            ]
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Vg Create
    request:
        method: POST
        url: "/lvm/vg/create"
        json: {
            "vg_name": "my_vg",
            "dev_names": [
                "$block01",
                "$block02"
            ]
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Lv Create
    request:
        method: POST
        url: "/lvm/lv/create"
        json: {
            "lv_name": "my_vg",
            "lv_size": "3G",
            "vg_name": "my_vg",
            "dev_names": [
                "$block01",
                "$block02"
            ]
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Thin Pool Create
    request:
        method: POST
        url: "/lvm/thin_pool/create"
        json: {
            "vg_name": "my_vg",
            "pool_name": "my_pool"
        }

    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Thin Create
    request:
        method: POST
        url: "/lvm/thin/create"
        json: {
            "thin_size": "1.99GiB",
            "vg_name": "my_vg",
            "pool_name": "my_pool",
            "thin_name": "my_thin"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Thin Size
    request:
        method: POST
        url: "/lvm/thin/size"
        json: {
            "vg_name": "my_vg"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Cache Pool Create
    request:
        method: POST
        url: "/lvm/cache_pool/create"
        json: {
            "cache_meta_name": "my_vg/cache_meta",
            "cache_data_name": "my_vg/cache_data"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Slow Data Cache
    request:
        method: POST
        url: "/lvm/slow_data/cache"
        json: {
            "cache_data_name": "my_vg/cache_data",
            "cachemode": "writeback",
            "slow_data_name": "my_vg/slow_lv"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Uncache Data
    request:
        method: POST
        url: "/lvm/uncache/data"
        json: {
            "slow_data_name": "my_vg/slow_lv"
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Splitcache Data
    request:
        method: POST
        url: "/lvm/splitcache/data"
        json: {
            "slow_data_name": "my_vg/slow_lv"
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Lv Remove
    request:
        method: POST
        url: "/lvm/lv/remove"
        json: {
            "dev_names": [
                "/dev/my_vg/slow_lv"
            ]
        }
    validate:
        - eq: ["status_code", 200]
-
    name: Lvm Vg Remove
    request:
        method: POST
        url: "/lvm/vg/remove"
        json: {
            "vg_names": [
                "my_vg"
            ]
        }
    validate:
        - eq: ["status_code", 200]

-
    name: Lvm Pv Remove
    request:
        method: POST
        url: "/lvm/pv/remove"
        json: {
            "dev_names": [
                "$block01",
                "$block02"
            ]
        }
    validate:
        - eq: ["status_code", 200]














