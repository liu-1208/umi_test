
config:
    name: "Node Logic Disk Test"
    # base_url: ${ENV(node_url)}
    base_url: ${get_node_url()}
    parameters:
        block01: ${P(umi_node/data/storage.csv)}

teststeps:
-
    name: Logic Disk List
    request:
        method: POST
        url: "/storage/logic_disk/list"
        json: {
          "types": [
            "None",
            "disk",
            "part",
            "lvm",
            "raid1",
            "raid5",
            "rom",
            "mpath"
          ]
        }
    extract:
        maj_min: body[0]."MAJ:MIN"
    validate:
        - eq: ["status_code", 200]
-
    name: Logic Disk Info
    request:
        method: POST
        url: "/storage/logic_disk/info"
        json: {
          "devs": [],
          "types": [
            "None",
            "disk",
            "part",
            "lvm",
            "raid1",
            "raid5",
            "rom",
            "mpath"
          ],
          "infos": [
            "MAJ:MIN",
            "NAME",
            "PATH",
            "SIZE",
            "TYPE",
            "FSTYPE",
            "LABEL",
            "UUID",
            "MOUNTPOINT"
          ]
        }

    validate:
        - eq: ["status_code", 200]

-
    name: Logic Disk Wipe
    request:
        method: POST
        url: "/storage/logic_disk/wipe"
        json: {
          # "dev_path": "${get_block_with_uuid_mark(uuid_01)}"
          "dev_path": "$block01"
        }

    validate:
        - eq: ["status_code", 200]

# -
#     name: Logic Disk Blink
#     request:
#         method: POST
#         url: "/storage/logic_disk/blink"
#         json: {
#           # "dev_path": "${get_block_with_uuid_mark(uuid_01)}"
#           "dev_path": "$block01"
#           "total_time": 90,
#           "read_time": 15,
#           "sleep_time": 5
#         }
# 
#     validate:
#         - eq: ["status_code", 200]
# 
